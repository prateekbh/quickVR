<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Connecting up Google Cardboard to web APIs</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
    <style>
      body {
        margin: 0px;
        overflow: hidden;
      }
      #webglviewer {
        bottom: 0;
        left: 0;
        position: absolute;
        right: 0;
        top: 0;
      }
    </style>
  </head>
  <body>
    <div id="webglviewer"></div>

    <script src="/public/javascripts/js/three.min.js"></script>
    <script src="/public/javascripts/js/StereoEffect.js"></script>
    <script src="/public/javascripts/js/DeviceOrientationControls.js"></script>
    <script src="/public/javascripts/js/OrbitControls.js"></script>
    <script src="/public/javascripts/js/helvetiker_regular.typeface.js"></script>
    <script src="/public/javascripts/js/ShelfManager.js"></script>
    <script src="https://timezonedb.googlecode.com/files/timezonedb.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/zepto/1.1.6/zepto.min.js"></script>
    <script src="/public/javascripts/js/module_product.js"></script>

    <script>
      var scene,
          camera, 
          renderer,
          element,
          container,
          effect,
          controls,
          clock,
          forwardTilted,
          backwardTilted,
          leftTilted,
          rightTilted,
          chIcon,
          currProd,
          currProdLabel,
          y=0;
      var light,camera;

      var raycaster = new THREE.Raycaster();
      var crosshairVector= new THREE.Vector3();

      var shelves={};

      init();

      function init() {
        scene = new THREE.Scene();
        camera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 0.001, 700);
        camera.position.set(50, 50, 170);
        scene.add(camera);

        renderer = new THREE.WebGLRenderer();
        renderer.setSize( window.innerWidth, window.innerHeight );
        renderer.setClearColor( 0x99CCFF, 1 );
        element = renderer.domElement;
        container = document.getElementById('webglviewer');
        container.appendChild(element);

        effect = new THREE.StereoEffect(renderer);

        
        var z=0;
        var light = new THREE.AmbientLight( 0xcccccc ); // soft white light
        scene.add( light );

        var floorTexture = THREE.ImageUtils.loadTexture('/public/images/wood.jpg');
        floorTexture.wrapS = THREE.RepeatWrapping;
        floorTexture.wrapT = THREE.RepeatWrapping;
        floorTexture.repeat = new THREE.Vector2(500, 500);
        floorTexture.anisotropy = renderer.getMaxAnisotropy();

        var floorMaterial = new THREE.MeshPhongMaterial({
          color: 0xffffff,
          specular: 0xffffff,
          shininess: 20,
          shading: THREE.FlatShading,
          map: floorTexture
        });

        var geometry = new THREE.PlaneBufferGeometry(10000, 10000);

        var floor = new THREE.Mesh(geometry, floorMaterial);
        floor.rotation.x = -Math.PI / 2;
        scene.add(floor);


        clock = new THREE.Clock();

        animate();
        

        window.onkeydown=function(e){
          if(e.keyCode==38){
            moveForward();
          }
          else if(e.keyCode==40){
            moveBackward();
          }
          else if (e.keyCode == 37) {   // left arrow key
            turnLeft();
          }
          else if (e.keyCode == 39) {   // right arrow key
            turnRight();
          }
        }

        $.get("/api/browse?cid=beverages&pno=1",function(data){
          ShelfManager.makeShelf("beverages",data);
          ShelfManager.createBanner("/public/images/personal_care1.png",50);
          $.get("/api/browse?cid=branded food&pno=1",function(data){
            ShelfManager.makeShelf("branded food",data);
            $.get("/api/browse?cid=grocery & staples&pno=1",function(data){
              ShelfManager.makeShelf("grocery & staples",data);
            });
          });
        });

        displayLaserTag();
        
      }

      function moveForward() {
        camera.translateZ(-10);
        var index=Math.ceil(camera.position.x/150);
        if(index>0){
          var category=ShelfManager.shelves.categories[index-1];
          var shelf=ShelfManager.shelves[category];
          var spaceLeft=(Math.round(camera.position.z)-shelf.endZ);
          if(spaceLeft<110&&spaceLeft>=100){
            var pno=Math.ceil(((shelf.products.length/10)+1));
            $.get("/api/browse?cid="+shelf.category+"&pno="+pno,function(data){
              ShelfManager.makeShelf(shelf.category,data);
            });
          }
        }
        

      }

      function moveBackward() {
        camera.translateZ(10);
      }
      
      function turnLeft(){
        camera.rotation.y = camera.rotation.y + (5 * (Math.PI / 180));
      }

      function turnRight(){
        camera.rotation.y = camera.rotation.y - (5 * (Math.PI / 180));
      }

      function animate() {
        requestAnimationFrame(animate);
        update(clock.getDelta());
        render(clock.getDelta());
      }

      function resize() {
        var width = container.offsetWidth;
        var height = container.offsetHeight;

        // camera.aspect = width / height;
        // camera.updateProjectionMatrix();

        // renderer.setSize(width, height);
        effect.setSize(width, height);
      }

      function update(dt) {
        resize();
      }

      function render(dt) {

        crosshairVector.x = 0;
        crosshairVector.y = 0;
        crosshairVector.z=0.5;
              
        raycaster.setFromCamera( crosshairVector, camera );


        var objs=raycaster.intersectObjects(scene.children);
        if(objs.length>0){
          try{
            var prod=objs[0];
            
            if(prod.object&&prod.object.userData&&prod.object.userData.fsn){
              
              if((!currProd)||(currProd.object.userData.fsn!=prod.object.userData.fsn)){
                showProductLabel(prod.object.userData.title,"Rs. "+prod.object.userData.cost);  
              }
              
            }

            currProd=prod;
          }
          catch(e){
            console.log(e);
          }
          
        }

        effect.render(scene, camera);
      }

      function displayLaserTag() {
        var material = new THREE.LineBasicMaterial({ color: 0xff0000 }); 
        var radius = 3; 
        var segments = 32; 
        var circleGeometry = new THREE.CircleGeometry( radius, segments ); 
        chIcon = new THREE.Line( circleGeometry, material );
        camera.add(chIcon);
        chIcon.position.set(0, 5, -50); 
      }

      function showProductLabel(product,price){
        
      }

    </script>
  </body>
</html>
